/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package nprot.vista;

import NProt.accesoDatos.ManejoBD;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.LinkedList;
import javax.swing.ComboBoxModel;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListDataListener;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author juan
 */
public class Cysteine_topN extends JInternalFrame {
    ManejoBD manejador=new ManejoBD();
    LinkedList <String[]> organisms;
        
    /**
     * Creates new form Cysteine_topN
     */
    public Cysteine_topN() {
        organisms=manejador.getTopOrganisms(10);
        initComponents();
        this.organismCB.setModel(new ComboModel());
        this.organismCB.addItemListener(new ComboEvents());       
        this.topNCB.addItemListener(new ComboEventsTop());
        this.tableOrganisms.setModel(new modeloTabla());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        organismCB = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableOrganisms = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        topNCB = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Results");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Search "));

        organismCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(organismCB, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(organismCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        tableOrganisms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableOrganisms);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Top"));

        topNCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "25", "50", "75", "100" }));

        jLabel1.setText("Top");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(topNCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(topNCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public class ComboModel implements ComboBoxModel{
        Object selected;
        @Override
        public void setSelectedItem(Object anItem) {
            this.selected=anItem;
        }

        @Override
        public Object getSelectedItem() {
            return selected;
        }

        @Override
        public int getSize() {
            return organisms.size();
        }

        @Override
        public Object getElementAt(int index) {
            return organisms.get(index)[0];
        }

        @Override
        public void addListDataListener(ListDataListener l) {
        }

        @Override
        public void removeListDataListener(ListDataListener l) {
        }
    
    }
    
    public class ComboEvents implements ItemListener{

        @Override
        public void itemStateChanged(ItemEvent e) {
           JOptionPane.showMessageDialog(null,organisms.get(organismCB.getSelectedIndex())[3]);
        }
    }
    
    public class ComboEventsTop implements ItemListener{

        @Override
        public void itemStateChanged(ItemEvent e) {
            int value=Integer.parseInt((String)topNCB.getSelectedItem());
            ModifiedTableModel newModel=new ModifiedTableModel(value);
            tableOrganisms.setModel(newModel);
            newModel.fireTableDataChanged();
           
        }
    }
    public class modeloTabla extends AbstractTableModel{
        
        public int getColumnCount(){
            return organisms.getFirst().length;
        }  
        
        public String getColumnName(int indice){
            if(indice==0){
                return "name";
            }else if(indice==1){
                return "Aminoacid count";
            }else if(indice==2){
                return "Cysteine count";
            }else{
                return "%";
            }
        }

        @Override
        public int getRowCount() {
            return organisms.size();
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            String[] actualOrganism=organisms.get(rowIndex);
            return actualOrganism[columnIndex];
        }
    }

    public class ModifiedTableModel extends AbstractTableModel{
    int top;
    LinkedList<String[]>top_organisms=new LinkedList();
        public ModifiedTableModel(int top) {
            this.top=top;
            for(int i=0;i<top;i++){
                top_organisms.add(organisms.get(i));
            }
        }
        
        public int getColumnCount(){
            return top_organisms.getFirst().length;
        }  
        
        public String getColumnName(int indice){
            if(indice==0){
                return "name";
            }else if(indice==1){
                return "Aminoacid count";
            }else if(indice==2){
                return "Cysteine count";
            }else{
                return "%";
            }
        }

        @Override
        public int getRowCount() {
            return top_organisms.size();
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            String[] actualOrganism=top_organisms.get(rowIndex);
            return actualOrganism[columnIndex];
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organismCB;
    private javax.swing.JTable tableOrganisms;
    private javax.swing.JComboBox topNCB;
    // End of variables declaration//GEN-END:variables
}

